name: Test

on: push

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    runs-on: ${{ github.actor == 'dependabot[bot]' && 'namespace-profile-frontend-light' || 'namespace-profile-frontend' }}
    permissions: write-all
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18.17.1' # 18.18.0 causes problems?
          cache: '' # We're caching manually below

      - name: Compute shasum of package-lock.json
        id: deps-sha
        run: echo "sha=$(shasum -a 256 package-lock.json | awk '{print $1}')" >> $GITHUB_OUTPUT

      # This step only returns cache-hit=true if **all** paths are cached.
      # Since the paths include the shasum of package-lock.json, this'll force a npm ci run if deps change.
      - name: Setup npm cache
        id: cache-npm
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ~/.npm
            ./node_modules
            ./.deps-sha-${{ steps.deps-sha.outputs.sha }}

      - name: Install dependencies
        run: npm ci --prefer-offline --ignore-scripts --no-audit --no-fund
        if: steps.cache-npm.outputs.cache-hit != 'true'

      # If we had to re-install deps due to a cache miss, we write a new file to the dir so that it's persisted in the cache.
      - name: "Persist deps sha"
        run: |
          echo "Creating file ./.deps-sha-${{ steps.deps-sha.outputs.sha }}/dummy-file"
          echo "cached" > ./.deps-sha-${{ steps.deps-sha.outputs.sha }}/dummy-file
        if: steps.cache-npm.outputs.cache-hit != 'true'

      - id: compute_percy_enable_for_branch
        run: echo "::set-output name=percy_enable::true"
        if: "github.ref == 'refs/heads/master'"

      - id: compute_percy_enable_for_commit
        run: echo "::set-output name=percy_enable::true"
        if: "contains(github.event.head_commit.message, '[percy]')"

      - id: compute_percy_enable
        run: echo "::set-output name=percy_enable::true"
        if: steps.compute_percy_enable_for_branch.outputs.percy_enable == 'true' || steps.compute_percy_enable_for_commit.outputs.percy_enable == 'true'

      - run: npx ember --version

      - run: npx percy --version

      - run: npm run tailwind:build

      - run: npx percy exec --quiet -- npx ember exam --silent --reporter=xunit --split=12 --parallel=1 | tee test-results.xml
        env:
          COVERAGE: true
          PERCY_ENABLE: ${{steps.compute_percy_enable.outputs.percy_enable || '0'}}
          PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}

      - run: cat test-results.xml
        if: always()

      - name: 'Upload coverage to Codecov'
        uses: codecov/codecov-action@v1
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Remove ember exam from test results
        run: sed -i 's/Exam Partition [0-9]\+ - //g' test-results.xml

      - name: Remove percy logs
        run: sed -i '/^\[percy\]/d' test-results.xml

      - run: cat test-results.xml

      - name: Publish Buildkite analytics
        continue-on-error: true
        run: |-
          curl -XPOST --fail \
            -H "Authorization: Token token=\"$BUILDKITE_ANALYTICS_TOKEN\"" \
            -F "data=@test-results.xml" \
            -F "format=junit" \
            -F "run_env[CI]=github_actions" \
            -F "run_env[key]=$GITHUB_ACTION-$GITHUB_RUN_NUMBER-$GITHUB_RUN_ATTEMPT" \
            -F "run_env[number]=$GITHUB_RUN_NUMBER" \
            -F "run_env[branch]=$GITHUB_REF" \
            -F "run_env[commit_sha]=$GITHUB_SHA" \
            -F "run_env[url]=https://github.com/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" \
            https://analytics-api.buildkite.com/v1/uploads
        if: always()
        env:
          BUILDKITE_ANALYTICS_TOKEN: ${{ secrets.BUILDKITE_ANALYTICS_TOKEN }}

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: test-results.xml

  lint:
    runs-on: 'namespace-profile-frontend-light'

    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: '' # We're caching manually below

      - name: Compute shasum of package-lock.json
        id: deps-sha
        run: echo "sha=$(shasum -a 256 package-lock.json | awk '{print $1}')" >> $GITHUB_OUTPUT

      # This step only returns cache-hit=true if **all** paths are cached.
      # Since the paths include the shasum of package-lock.json, this'll force a npm ci run if deps change.
      - name: Setup npm cache
        id: cache-npm
        uses: namespacelabs/nscloud-cache-action@v1
        with:
          path: |
            ~/.npm
            ./node_modules
            ./.deps-sha-${{ steps.deps-sha.outputs.sha }}

      - run: ls -lah /cache

      - name: Install dependencies
        run: npm ci --prefer-offline --ignore-scripts --no-audit --no-fund
        if: steps.cache-npm.outputs.cache-hit != 'true'

      # If we had to re-install deps due to a cache miss, we write a new file to the dir so that it's persisted in the cache.
      - name: "Persist deps sha"
        run: |
          echo "Creating file ./.deps-sha-${{ steps.deps-sha.outputs.sha }}/dummy-file"
          echo "cached" > ./.deps-sha-${{ steps.deps-sha.outputs.sha }}/dummy-file
        if: steps.cache-npm.outputs.cache-hit != 'true'

      - run: npm run tailwind:build
      - run: npm run lint


