name: Test

on: push

jobs:
  test:
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v2
        with:
          path: ./node_modules
          key: modules-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: npm ci --prefer-offline --ignore-scripts --no-audit --no-fund

      - id: compute_percy_enable_for_branch
        run: echo "::set-output name=percy_enable::true"
        if: "github.ref == 'refs/heads/master'"

      - id: compute_percy_enable_for_commit
        run: echo "::set-output name=percy_enable::true"
        if: "contains(github.event.head_commit.message, '[percy]')"

      - id: compute_percy_enable
        run: echo "::set-output name=percy_enable::true"
        if: steps.compute_percy_enable_for_branch.outputs.percy_enable == 'true' || steps.compute_percy_enable_for_commit.outputs.percy_enable == 'true'

      - run: ./node_modules/.bin/percy exec --quiet -- ./node_modules/.bin/ember exam --split=3 --parallel --silent --reporter xunit | tee test-results.xml
        env:
          COVERAGE: true
          PERCY_ENABLE: ${{steps.compute_percy_enable.outputs.percy_enable || '0'}}
          PERCY_TOKEN: ${{secrets.PERCY_TOKEN}}

      - run: cat test-results.xml
        if: always()

      - name: "Upload coverage to Deepsource"
        run: |
          curl https://deepsource.io/cli | sh
          ./bin/deepsource report --analyzer test-coverage --key javascript --value-file ./coverage/lcov.info
        env:
          DEEPSOURCE_DSN: ${{secrets.DEEPSOURCE_DSN}}

#      - name: "Upload coverage to Codecov"
#        uses: codecov/codecov-action@v1
#        with:
#          fail_ci_if_error: true
#          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: test-results.xml

  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci --ignore-scripts
      - run: npm run lint
