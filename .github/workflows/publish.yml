name: Publish

on:
  push:
    tags:
      - "v*"

jobs:
  sentry-release:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      - run: curl -sL https://sentry.io/get-cli/ | bash
      - env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
        run: |
          tag=$(echo $GITHUB_REF | sed "s/refs\\/tags\\///")
          sentry-cli releases -o codecrafters -p frontend new ${tag}
          sentry-cli releases -o codecrafters -p frontend set-commits --auto ${tag} --ignore-missing

  build_production:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci --prefer-offline --ignore-scripts

      - run: ./node_modules/.bin/ember build --environment=production
        env:
          CDN_BASE_URL: "https://d28fwjy3evlamb.cloudfront.net/"

      - run: zip -r dist.zip dist
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist.zip
          path: dist.zip

  build_staging:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: actions/setup-node@v2
        with:
          node-version: '16'
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - run: npm ci --prefer-offline --ignore-scripts
      - run: ./node_modules/.bin/ember build --environment=production
        env:
          CDN_BASE_URL: "https://dxg8xunmqu5r4.cloudfront.net/"

      - run: zip -r dist-staging.zip dist
      - name: Upload dist
        uses: actions/upload-artifact@v2
        with:
          name: dist-staging.zip
          path: dist-staging.zip

  publish:
    runs-on: ubuntu-latest
    needs: [build_production, build_staging]

    steps:
      - name: Download production zip
        uses: actions/download-artifact@v2
        with:
          name: dist.zip

      - name: Download staging zip
        uses: actions/download-artifact@v2
        with:
          name: dist-staging.zip

      - run: ls

      - name: Create release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          fail_on_unmatched_files: true
          files: |
            dist.zip
            dist-staging.zip
        env:
          GITHUB_TOKEN: ${{ secrets.CODECRAFTERS_BOT_GITHUB_TOKEN }}

      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          repository: codecrafters-io/core
          token: ${{ secrets.CODECRAFTERS_BOT_GITHUB_TOKEN }}
          event-type: update-frontend-version
